/**
 * Created by Артём on 14.10.2016.
 */
var colors, express, fs, pug, pathmodule, bodyParser;
var modules = ["colors/safe", 'express', 'fs', 'pug', 'path', 'body-parser'];

const logger = require('./Noty.js');
var noty = new logger.Noty("done");

function ServerBox(install_modules) {
    colors = require('colors/safe');    // Я не уверен нужны ли здесь эти 3 модуля,
    express = require('express');       //т.к. ты все равно их записываешь в
    fs = require('fs');
    pug = require('pug');               //peerDependencies
    pathmodule = require('path');
    bodyParser = require('body-parser');


    noty.log(colors.cyan.bold('Starting WebBox.', 'done'));

    this.app = express();
    this.app.use(bodyParser.urlencoded({extended: true}));
    this.app.use(bodyParser.json());// Include Express
    this.port = 80; 		// Default listening port
    this.path = pathmodule.dirname(require.main.filename); // Get project path
    this.module_path_abs = __dirname; // Get module path
    this.module_path = "/node_modules/webbox/";
}

ServerBox.prototype.createServer = function(srv_port) {
    this.port = srv_port;

    // Start listening port
    this.app.listen(this.port);
    noty.log('Server listening on port *:' + this.port, 'done');

    // Create API page
    this.newResourceFolder(this.module_path+'css/');
    this.newResourceFolder(this.module_path+'imgs/');
    this.newResourceFolder(this.module_path+'downloads/');
    this.newStaticPage('/cat-api', this.module_path+'api.html');
};

    // Deprecated
ServerBox.prototype.newResourceFolder = function (dir) {
    var abs_path = this.path + '/';
    this.app.get(dir+':name', function (req, res, next) {
        var pth = abs_path + dir + req.params.name;
        res.sendFile(pth);
    });
    noty.log('New resource folder: ' + dir);
};

ServerBox.prototype.setServerRoot = function (path) {
    var server_root = this.path+path;
    noty.log(server_root);
    this.app.get(/(.+?)(\.[^.]*$|$)/, function(req,res)
    {
        res.sendFile((server_root+decodeURI(req._parsedUrl.pathname)), function(err)
        {
            if (err) {
                res.status(404).send('Sorry, cant find that!');
                noty.log('[404]Error while trying to find an object.', 'err');
            }
            else {
                noty.log('Object was sent:', 'info');
            }
        });
    })
};

ServerBox.prototype.newDownloadFolder = function (dir) {
    var abs_path = this.path + '/';
    this.app.get(dir+':name', function (req, res, next) {
        var pth = abs_path + dir + req.params.name;
        res.sendFile(pth);
    });
    noty.log('New download folder: ' + dir, 'done');
}

/*
 Creates a new request listener with user-function.
 */
ServerBox.prototype.newRequestListener = function(req_path, method, callback) {
    if (method.toLowerCase() == "get") {
        this.app.get(req_path, function(req,res) {
            callback(req, res);
        });
    }
    else if (method.toLowerCase() == "post") {
        this.app.post(req_path, function(req,res) {
            callback(req, res);
        });
    }
}

/*
 Creates a new request listener with static page.
 */
ServerBox.prototype.newStaticPage = function (req_path, page_path) {
    var abs_path = this.path + '/';

    this.app.get(req_path, function (req, res, next) {
        var pth = abs_path + page_path;
        res.sendFile(pth);
    });
    noty.log('New static page: ' + page_path, 'done');
}

ServerBox.prototype.sendJSON = function (res, json_obj)
{
    res.json(json_obj);
}


ServerBox.prototype.redirectLink = function(res, path)
{
    res.redirect(path);
}

exports.ServerBox=ServerBox;